// Code generated by DarwinKit. DO NOT EDIT.

package avfoundation

import (
	"github.com/progrium/macdriver/objc"
)

// A protocol that defines the method to implement to respond to playback commands from the playback coordinator. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate?language=objc
type PPlaybackCoordinatorPlaybackControlDelegate interface {
	// optional
	PlaybackCoordinatorDidIssueBufferingCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, bufferingCommand DelegatingPlaybackCoordinatorBufferingCommand, completionHandler func())
	HasPlaybackCoordinatorDidIssueBufferingCommandCompletionHandler() bool

	// optional
	PlaybackCoordinatorDidIssueSeekCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, seekCommand DelegatingPlaybackCoordinatorSeekCommand, completionHandler func())
	HasPlaybackCoordinatorDidIssueSeekCommandCompletionHandler() bool

	// optional
	PlaybackCoordinatorDidIssuePauseCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, pauseCommand DelegatingPlaybackCoordinatorPauseCommand, completionHandler func())
	HasPlaybackCoordinatorDidIssuePauseCommandCompletionHandler() bool

	// optional
	PlaybackCoordinatorDidIssuePlayCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, playCommand DelegatingPlaybackCoordinatorPlayCommand, completionHandler func())
	HasPlaybackCoordinatorDidIssuePlayCommandCompletionHandler() bool
}

// A delegate implementation builder for the [PPlaybackCoordinatorPlaybackControlDelegate] protocol.
type PlaybackCoordinatorPlaybackControlDelegate struct {
	_PlaybackCoordinatorDidIssueBufferingCommandCompletionHandler func(coordinator DelegatingPlaybackCoordinator, bufferingCommand DelegatingPlaybackCoordinatorBufferingCommand, completionHandler func())
	_PlaybackCoordinatorDidIssueSeekCommandCompletionHandler      func(coordinator DelegatingPlaybackCoordinator, seekCommand DelegatingPlaybackCoordinatorSeekCommand, completionHandler func())
	_PlaybackCoordinatorDidIssuePauseCommandCompletionHandler     func(coordinator DelegatingPlaybackCoordinator, pauseCommand DelegatingPlaybackCoordinatorPauseCommand, completionHandler func())
	_PlaybackCoordinatorDidIssuePlayCommandCompletionHandler      func(coordinator DelegatingPlaybackCoordinator, playCommand DelegatingPlaybackCoordinatorPlayCommand, completionHandler func())
}

func (di *PlaybackCoordinatorPlaybackControlDelegate) HasPlaybackCoordinatorDidIssueBufferingCommandCompletionHandler() bool {
	return di._PlaybackCoordinatorDidIssueBufferingCommandCompletionHandler != nil
}

// Tells the delegate to expect playback soon and to start buffering media data in preparation. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750294-playbackcoordinator?language=objc
func (di *PlaybackCoordinatorPlaybackControlDelegate) SetPlaybackCoordinatorDidIssueBufferingCommandCompletionHandler(f func(coordinator DelegatingPlaybackCoordinator, bufferingCommand DelegatingPlaybackCoordinatorBufferingCommand, completionHandler func())) {
	di._PlaybackCoordinatorDidIssueBufferingCommandCompletionHandler = f
}

// Tells the delegate to expect playback soon and to start buffering media data in preparation. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750294-playbackcoordinator?language=objc
func (di *PlaybackCoordinatorPlaybackControlDelegate) PlaybackCoordinatorDidIssueBufferingCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, bufferingCommand DelegatingPlaybackCoordinatorBufferingCommand, completionHandler func()) {
	di._PlaybackCoordinatorDidIssueBufferingCommandCompletionHandler(coordinator, bufferingCommand, completionHandler)
}
func (di *PlaybackCoordinatorPlaybackControlDelegate) HasPlaybackCoordinatorDidIssueSeekCommandCompletionHandler() bool {
	return di._PlaybackCoordinatorDidIssueSeekCommandCompletionHandler != nil
}

// Tells the delegate to seek to a new time. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750298-playbackcoordinator?language=objc
func (di *PlaybackCoordinatorPlaybackControlDelegate) SetPlaybackCoordinatorDidIssueSeekCommandCompletionHandler(f func(coordinator DelegatingPlaybackCoordinator, seekCommand DelegatingPlaybackCoordinatorSeekCommand, completionHandler func())) {
	di._PlaybackCoordinatorDidIssueSeekCommandCompletionHandler = f
}

// Tells the delegate to seek to a new time. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750298-playbackcoordinator?language=objc
func (di *PlaybackCoordinatorPlaybackControlDelegate) PlaybackCoordinatorDidIssueSeekCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, seekCommand DelegatingPlaybackCoordinatorSeekCommand, completionHandler func()) {
	di._PlaybackCoordinatorDidIssueSeekCommandCompletionHandler(coordinator, seekCommand, completionHandler)
}
func (di *PlaybackCoordinatorPlaybackControlDelegate) HasPlaybackCoordinatorDidIssuePauseCommandCompletionHandler() bool {
	return di._PlaybackCoordinatorDidIssuePauseCommandCompletionHandler != nil
}

// Tells the delegate to pause playback. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750295-playbackcoordinator?language=objc
func (di *PlaybackCoordinatorPlaybackControlDelegate) SetPlaybackCoordinatorDidIssuePauseCommandCompletionHandler(f func(coordinator DelegatingPlaybackCoordinator, pauseCommand DelegatingPlaybackCoordinatorPauseCommand, completionHandler func())) {
	di._PlaybackCoordinatorDidIssuePauseCommandCompletionHandler = f
}

// Tells the delegate to pause playback. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750295-playbackcoordinator?language=objc
func (di *PlaybackCoordinatorPlaybackControlDelegate) PlaybackCoordinatorDidIssuePauseCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, pauseCommand DelegatingPlaybackCoordinatorPauseCommand, completionHandler func()) {
	di._PlaybackCoordinatorDidIssuePauseCommandCompletionHandler(coordinator, pauseCommand, completionHandler)
}
func (di *PlaybackCoordinatorPlaybackControlDelegate) HasPlaybackCoordinatorDidIssuePlayCommandCompletionHandler() bool {
	return di._PlaybackCoordinatorDidIssuePlayCommandCompletionHandler != nil
}

// Tells the delegate to match the playback rate to that of the group when the rate is nonzero. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750296-playbackcoordinator?language=objc
func (di *PlaybackCoordinatorPlaybackControlDelegate) SetPlaybackCoordinatorDidIssuePlayCommandCompletionHandler(f func(coordinator DelegatingPlaybackCoordinator, playCommand DelegatingPlaybackCoordinatorPlayCommand, completionHandler func())) {
	di._PlaybackCoordinatorDidIssuePlayCommandCompletionHandler = f
}

// Tells the delegate to match the playback rate to that of the group when the rate is nonzero. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750296-playbackcoordinator?language=objc
func (di *PlaybackCoordinatorPlaybackControlDelegate) PlaybackCoordinatorDidIssuePlayCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, playCommand DelegatingPlaybackCoordinatorPlayCommand, completionHandler func()) {
	di._PlaybackCoordinatorDidIssuePlayCommandCompletionHandler(coordinator, playCommand, completionHandler)
}

// ensure impl type implements protocol interface
var _ PPlaybackCoordinatorPlaybackControlDelegate = (*PlaybackCoordinatorPlaybackControlDelegateObject)(nil)

// A concrete type for the [PPlaybackCoordinatorPlaybackControlDelegate] protocol.
type PlaybackCoordinatorPlaybackControlDelegateObject struct {
	objc.Object
}

func (p_ PlaybackCoordinatorPlaybackControlDelegateObject) HasPlaybackCoordinatorDidIssueBufferingCommandCompletionHandler() bool {
	return p_.RespondsToSelector(objc.Sel("playbackCoordinator:didIssueBufferingCommand:completionHandler:"))
}

// Tells the delegate to expect playback soon and to start buffering media data in preparation. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750294-playbackcoordinator?language=objc
func (p_ PlaybackCoordinatorPlaybackControlDelegateObject) PlaybackCoordinatorDidIssueBufferingCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, bufferingCommand DelegatingPlaybackCoordinatorBufferingCommand, completionHandler func()) {
	objc.Call[objc.Void](p_, objc.Sel("playbackCoordinator:didIssueBufferingCommand:completionHandler:"), coordinator, bufferingCommand, completionHandler)
}

func (p_ PlaybackCoordinatorPlaybackControlDelegateObject) HasPlaybackCoordinatorDidIssueSeekCommandCompletionHandler() bool {
	return p_.RespondsToSelector(objc.Sel("playbackCoordinator:didIssueSeekCommand:completionHandler:"))
}

// Tells the delegate to seek to a new time. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750298-playbackcoordinator?language=objc
func (p_ PlaybackCoordinatorPlaybackControlDelegateObject) PlaybackCoordinatorDidIssueSeekCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, seekCommand DelegatingPlaybackCoordinatorSeekCommand, completionHandler func()) {
	objc.Call[objc.Void](p_, objc.Sel("playbackCoordinator:didIssueSeekCommand:completionHandler:"), coordinator, seekCommand, completionHandler)
}

func (p_ PlaybackCoordinatorPlaybackControlDelegateObject) HasPlaybackCoordinatorDidIssuePauseCommandCompletionHandler() bool {
	return p_.RespondsToSelector(objc.Sel("playbackCoordinator:didIssuePauseCommand:completionHandler:"))
}

// Tells the delegate to pause playback. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750295-playbackcoordinator?language=objc
func (p_ PlaybackCoordinatorPlaybackControlDelegateObject) PlaybackCoordinatorDidIssuePauseCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, pauseCommand DelegatingPlaybackCoordinatorPauseCommand, completionHandler func()) {
	objc.Call[objc.Void](p_, objc.Sel("playbackCoordinator:didIssuePauseCommand:completionHandler:"), coordinator, pauseCommand, completionHandler)
}

func (p_ PlaybackCoordinatorPlaybackControlDelegateObject) HasPlaybackCoordinatorDidIssuePlayCommandCompletionHandler() bool {
	return p_.RespondsToSelector(objc.Sel("playbackCoordinator:didIssuePlayCommand:completionHandler:"))
}

// Tells the delegate to match the playback rate to that of the group when the rate is nonzero. [Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/avfoundation/avplaybackcoordinatorplaybackcontroldelegate/3750296-playbackcoordinator?language=objc
func (p_ PlaybackCoordinatorPlaybackControlDelegateObject) PlaybackCoordinatorDidIssuePlayCommandCompletionHandler(coordinator DelegatingPlaybackCoordinator, playCommand DelegatingPlaybackCoordinatorPlayCommand, completionHandler func()) {
	objc.Call[objc.Void](p_, objc.Sel("playbackCoordinator:didIssuePlayCommand:completionHandler:"), coordinator, playCommand, completionHandler)
}
