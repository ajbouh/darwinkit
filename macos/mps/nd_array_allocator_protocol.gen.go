// Code generated by DarwinKit. DO NOT EDIT.

package mps

import (
	"github.com/progrium/macdriver/macos/metal"
	"github.com/progrium/macdriver/objc"
)

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/metalperformanceshaders/mpsndarrayallocator?language=objc
type PNDArrayAllocator interface {
	// optional
	ArrayForCommandBufferArrayDescriptorKernel(cmdBuf metal.CommandBufferObject, descriptor NDArrayDescriptor, kernel Kernel) NDArray
	HasArrayForCommandBufferArrayDescriptorKernel() bool
}

// ensure impl type implements protocol interface
var _ PNDArrayAllocator = (*NDArrayAllocatorObject)(nil)

// A concrete type for the [PNDArrayAllocator] protocol.
type NDArrayAllocatorObject struct {
	objc.Object
}

func (n_ NDArrayAllocatorObject) HasArrayForCommandBufferArrayDescriptorKernel() bool {
	return n_.RespondsToSelector(objc.Sel("arrayForCommandBuffer:arrayDescriptor:kernel:"))
}

//	[Full Topic]
//
// [Full Topic]: https://developer.apple.com/documentation/metalperformanceshaders/mpsndarrayallocator/3143490-arrayforcommandbuffer?language=objc
func (n_ NDArrayAllocatorObject) ArrayForCommandBufferArrayDescriptorKernel(cmdBuf metal.CommandBufferObject, descriptor NDArrayDescriptor, kernel Kernel) NDArray {
	po0 := objc.WrapAsProtocol("MTLCommandBuffer", cmdBuf)
	rv := objc.Call[NDArray](n_, objc.Sel("arrayForCommandBuffer:arrayDescriptor:kernel:"), po0, descriptor, kernel)
	return rv
}
